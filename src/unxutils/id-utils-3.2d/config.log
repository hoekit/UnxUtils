This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

configure:567: checking for a BSD compatible install
configure:620: checking whether build environment is sane
configure:677: checking whether make sets ${MAKE}
configure:724: checking for working aclocal
configure:737: checking for working autoconf
configure:750: checking for working automake
configure:763: checking for working autoheader
configure:776: checking for working makeinfo
configure:823: checking for gcc
configure:936: checking whether the C compiler (gcc  ) works
configure:952: gcc -o conftest    conftest.c  1>&5
configure:978: checking whether the C compiler (gcc  ) is a cross-compiler
configure:983: checking whether we are using GNU C
configure:992: gcc -E conftest.c
configure:1011: checking whether gcc accepts -g
configure:1043: checking whether ln -s works
configure:1075: checking for a BSD compatible install
configure:1128: checking whether make sets ${MAKE}
configure:1155: checking how to run the C preprocessor
configure:1176: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1236: checking whether gcc needs -traditional
configure:1243: sgtty.h: No such file or directory
configure:1261: termio.h: No such file or directory
configure:1284: checking for ranlib
configure:1312: checking for AIX
configure:1337: checking for minix/config.h
configure:1347: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1343: minix\config.h: No such file or directory
configure: failed program was:
#line 1342 "configure"
#include "confdefs.h"
#include <minix/config.h>
configure:1385: checking for POSIXized ISC
configure:1420: checking for dirent.h that defines DIR
configure:1433: gcc -c -g -O2  conftest.c 1>&5
configure:1458: checking for opendir in -ldir
configure:1477: gcc -o conftest -g -O2   conftest.c -ldir   1>&5
ld: cannot open -ldir: No such file or directory
configure: failed program was:
#line 1466 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char opendir();

int main() {
opendir()
; return 0; }
configure:1541: checking for ANSI C header files
configure:1554: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1621: gcc -o conftest -g -O2   conftest.c  1>&5
configure:1645: checking whether stat file-mode macros are broken
configure:1701: checking for sys/wait.h that is POSIX.1 compatible
configure:1722: gcc -c -g -O2  conftest.c 1>&5
configure:1708: sys\wait.h: No such file or directory
configure: failed program was:
#line 1706 "configure"
#include "confdefs.h"
#include <sys/types.h>
#include <sys/wait.h>
#ifndef WEXITSTATUS
#define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
#endif
#ifndef WIFEXITED
#define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
#endif
int main() {
int s;
wait (&s);
s = WIFEXITED (s) ? WEXITSTATUS (s) : 1;
; return 0; }
configure:1746: checking for sys/types.h
configure:1756: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1746: checking for sys/param.h
configure:1756: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1752: sys\param.h: No such file or directory
configure: failed program was:
#line 1751 "configure"
#include "confdefs.h"
#include <sys/param.h>
configure:1746: checking for sys/stat.h
configure:1756: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1746: checking for sys/ioctl.h
configure:1756: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1752: sys\ioctl.h: No such file or directory
configure: failed program was:
#line 1751 "configure"
#include "confdefs.h"
#include <sys/ioctl.h>
configure:1786: checking for limits.h
configure:1796: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1786: checking for stddef.h
configure:1796: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1786: checking for stdlib.h
configure:1796: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1786: checking for unistd.h
configure:1796: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1786: checking for string.h
configure:1796: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1786: checking for fcntl.h
configure:1796: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1826: checking for malloc.h
configure:1836: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1826: checking for termios.h
configure:1836: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1832: termios.h: No such file or directory
configure: failed program was:
#line 1831 "configure"
#include "confdefs.h"
#include <termios.h>
configure:1826: checking for termio.h
configure:1836: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1832: termio.h: No such file or directory
configure: failed program was:
#line 1831 "configure"
#include "confdefs.h"
#include <termio.h>
configure:1826: checking for sgtty.h
configure:1836: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1832: sgtty.h: No such file or directory
configure: failed program was:
#line 1831 "configure"
#include "confdefs.h"
#include <sgtty.h>
configure:1826: checking for regex.h
configure:1836: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1832: regex.h: No such file or directory
configure: failed program was:
#line 1831 "configure"
#include "confdefs.h"
#include <regex.h>
configure:1826: checking for memory.h
configure:1836: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:1871: checking for gcc option to accept ANSI C
configure:1925: gcc  -c -g -O2  conftest.c 1>&5
configure:1951: checking for function prototypes
configure:2110: checking for working const
configure:2164: gcc -c -g -O2  conftest.c 1>&5
configure:2185: checking return type of signal handlers
configure:2207: gcc -c -g -O2  conftest.c 1>&5
configure:2226: checking for off_t
configure:2259: checking for size_t
configure:2292: checking for ptrdiff_t
configure:2304: gcc -c -g -O2  conftest.c 1>&5
configure:2341: checking for working alloca.h
configure:2353: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2347: alloca.h: No such file or directory
configure: failed program was:
#line 2346 "configure"
#include "confdefs.h"
#include <alloca.h>
int main() {
char *p = alloca(2 * sizeof(int));
; return 0; }
configure:2374: checking for alloca
configure:2407: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2574: checking for vprintf
configure:2603: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2681: checking for obstacks
configure:2693: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2687: obstack.h: No such file or directory
configure: failed program was:
#line 2686 "configure"
#include "confdefs.h"
#include "obstack.h"
int main() {
struct obstack *mem;obstack_free(mem,(char *) 0)
; return 0; }
configure:2718: checking for getwd
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccEsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2741: undefined reference to `getwd'
configure: failed program was:
#line 2723 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char getwd(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char getwd();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_getwd) || defined (__stub___getwd)
choke me
#else
f = getwd;
#endif

; return 0; }
configure:2718: checking for getcwd
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2718: checking for link
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\cc9naaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2741: undefined reference to `link'
configure: failed program was:
#line 2723 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char link(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char link();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_link) || defined (__stub___link)
choke me
#else
f = link;
#endif

; return 0; }
configure:2718: checking for strerror
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2718: checking for isascii
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2718: checking for bcopy
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccjpaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2741: undefined reference to `bcopy'
configure: failed program was:
#line 2723 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char bcopy(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char bcopy();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_bcopy) || defined (__stub___bcopy)
choke me
#else
f = bcopy;
#endif

; return 0; }
configure:2718: checking for bzero
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccQsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2741: undefined reference to `bzero'
configure: failed program was:
#line 2723 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char bzero(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char bzero();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_bzero) || defined (__stub___bzero)
choke me
#else
f = bzero;
#endif

; return 0; }
configure:2718: checking for memcpy
configure:2747: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2730: warning: conflicting types for built-in function `memcpy'
configure:2774: checking for strdup
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2774: checking for strndup
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccxraaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2797: undefined reference to `strndup'
configure: failed program was:
#line 2779 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char strndup(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char strndup();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_strndup) || defined (__stub___strndup)
choke me
#else
f = strndup;
#endif

; return 0; }
configure:2774: checking for strspn
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2774: checking for strcspn
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2774: checking for strpbrk
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2774: checking for strstr
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2774: checking for strtok
configure:2803: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2832: checking for basename
configure:2861: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\cc2saaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2855: undefined reference to `basename'
configure: failed program was:
#line 2837 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char basename(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char basename();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_basename) || defined (__stub___basename)
choke me
#else
f = basename;
#endif

; return 0; }
configure:2832: checking for dirname
configure:2861: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccppaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2855: undefined reference to `dirname'
configure: failed program was:
#line 2837 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char dirname(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char dirname();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_dirname) || defined (__stub___dirname)
choke me
#else
f = dirname;
#endif

; return 0; }
configure:2832: checking for fnmatch
configure:2861: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccNsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2855: undefined reference to `fnmatch'
configure: failed program was:
#line 2837 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char fnmatch(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char fnmatch();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_fnmatch) || defined (__stub___fnmatch)
choke me
#else
f = fnmatch;
#endif

; return 0; }
configure:2832: checking for error
configure:2861: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccQsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2855: undefined reference to `error'
configure: failed program was:
#line 2837 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char error(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char error();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_error) || defined (__stub___error)
choke me
#else
f = error;
#endif

; return 0; }
configure:2832: checking for memcpy
configure:2832: checking for memset
configure:2861: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:2844: warning: conflicting types for built-in function `memset'
configure:2888: checking for regcomp
configure:2917: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\cckqaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:2911: undefined reference to `regcomp'
configure: failed program was:
#line 2893 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char regcomp(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char regcomp();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_regcomp) || defined (__stub___regcomp)
choke me
#else
f = regcomp;
#endif

; return 0; }
configure:2943: checking for inline
configure:2957: gcc -c -g -O2  conftest.c 1>&5
configure:2986: checking for unistd.h
configure:3025: checking for getpagesize
configure:3054: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:3079: checking for working mmap
configure:3227: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:3112: sys\mman.h: No such file or directory
configure: failed program was:
#line 3087 "configure"
#include "confdefs.h"

/* Thanks to Mike Haertel and Jim Avera for this test.
   Here is a matrix of mmap possibilities:
	mmap private not fixed
	mmap private fixed at somewhere currently unmapped
	mmap private fixed at somewhere already mapped
	mmap shared not fixed
	mmap shared fixed at somewhere currently unmapped
	mmap shared fixed at somewhere already mapped
   For private mappings, we should verify that changes cannot be read()
   back from the file, nor mmap's back from the file at a different
   address.  (There have been systems where private was not correctly
   implemented like the infamous i386 svr4.0, and systems where the
   VM page cache was not coherent with the filesystem buffer cache
   like early versions of FreeBSD and possibly contemporary NetBSD.)
   For shared mappings, we should conversely verify that changes get
   propogated back to all the places they're supposed to be.

   Grep wants private fixed already mapped.
   The main things grep needs to know about mmap are:
   * does it exist and is it safe to write into the mmap'd area
   * how to use it (BSD variants)  */
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

/* This mess was copied from the GNU getpagesize.h.  */
#ifndef HAVE_GETPAGESIZE
# ifdef HAVE_UNISTD_H
#  include <unistd.h>
# endif

/* Assume that all systems that can run configure have sys/param.h.  */
# ifndef HAVE_SYS_PARAM_H
#  define HAVE_SYS_PARAM_H 1
# endif

# ifdef _SC_PAGESIZE
#  define getpagesize() sysconf(_SC_PAGESIZE)
# else /* no _SC_PAGESIZE */
#  ifdef HAVE_SYS_PARAM_H
#   include <sys/param.h>
#   ifdef EXEC_PAGESIZE
#    define getpagesize() EXEC_PAGESIZE
#   else /* no EXEC_PAGESIZE */
#    ifdef NBPG
#     define getpagesize() NBPG * CLSIZE
#     ifndef CLSIZE
#      define CLSIZE 1
#     endif /* no CLSIZE */
#    else /* no NBPG */
#     ifdef NBPC
#      define getpagesize() NBPC
#     else /* no NBPC */
#      ifdef PAGESIZE
#       define getpagesize() PAGESIZE
#      endif /* PAGESIZE */
#     endif /* no NBPC */
#    endif /* no NBPG */
#   endif /* no EXEC_PAGESIZE */
#  else /* no HAVE_SYS_PARAM_H */
#   define getpagesize() 8192	/* punt totally */
#  endif /* no HAVE_SYS_PARAM_H */
# endif /* no _SC_PAGESIZE */

#endif /* no HAVE_GETPAGESIZE */

#ifdef __cplusplus
extern "C" { void *malloc(unsigned); }
#else
char *malloc();
#endif

int
main()
{
	char *data, *data2, *data3;
	int i, pagesize;
	int fd;

	pagesize = getpagesize();

	/*
	 * First, make a file with some known garbage in it.
	 */
	data = malloc(pagesize);
	if (!data)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		*(data + i) = rand();
	umask(0);
	fd = creat("conftestmmap", 0600);
	if (fd < 0)
		exit(1);
	if (write(fd, data, pagesize) != pagesize)
		exit(1);
	close(fd);

	/*
	 * Next, try to mmap the file at a fixed address which
	 * already has something else allocated at it.  If we can,
	 * also make sure that we see the same garbage.
	 */
	fd = open("conftestmmap", O_RDWR);
	if (fd < 0)
		exit(1);
	data2 = malloc(2 * pagesize);
	if (!data2)
		exit(1);
	data2 += (pagesize - ((int) data2 & (pagesize - 1))) & (pagesize - 1);
	if (data2 != mmap(data2, pagesize, PROT_READ | PROT_WRITE,
	    MAP_PRIVATE | MAP_FIXED, fd, 0L))
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data2 + i))
			exit(1);

	/*
	 * Finally, make sure that changes to the mapped area
	 * do not percolate back to the file as seen by read().
	 * (This is a bug on some variants of i386 svr4.0.)
	 */
	for (i = 0; i < pagesize; ++i)
		*(data2 + i) = *(data2 + i) + 1;
	data3 = malloc(pagesize);
	if (!data3)
		exit(1);
	if (read(fd, data3, pagesize) != pagesize)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data3 + i))
			exit(1);
	close(fd);
	unlink("conftestmmap");
	exit(0);
}

configure:3255: checking for argz.h
configure:3265: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:3261: argz.h: No such file or directory
configure: failed program was:
#line 3260 "configure"
#include "confdefs.h"
#include <argz.h>
configure:3255: checking for limits.h
configure:3255: checking for locale.h
configure:3265: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:3255: checking for nl_types.h
configure:3265: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:3261: nl_types.h: No such file or directory
configure: failed program was:
#line 3260 "configure"
#include "confdefs.h"
#include <nl_types.h>
configure:3255: checking for malloc.h
configure:3255: checking for string.h
configure:3255: checking for unistd.h
configure:3255: checking for sys/param.h
configure:3295: checking for getcwd
configure:3295: checking for munmap
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccvmaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:3318: undefined reference to `munmap'
configure: failed program was:
#line 3300 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char munmap(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char munmap();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_munmap) || defined (__stub___munmap)
choke me
#else
f = munmap;
#endif

; return 0; }
configure:3295: checking for putenv
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:3295: checking for setenv
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccZsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:3318: undefined reference to `setenv'
configure: failed program was:
#line 3300 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char setenv(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char setenv();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_setenv) || defined (__stub___setenv)
choke me
#else
f = setenv;
#endif

; return 0; }
configure:3295: checking for setlocale
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:3295: checking for strchr
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:3295: checking for strcasecmp
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure:3295: checking for strdup
configure:3295: checking for __argz_count
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccSoaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:3318: undefined reference to `__argz_count'
configure: failed program was:
#line 3300 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char __argz_count(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char __argz_count();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub___argz_count) || defined (__stub_____argz_count)
choke me
#else
f = __argz_count;
#endif

; return 0; }
configure:3295: checking for __argz_stringify
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccpsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:3318: undefined reference to `__argz_stringify'
configure: failed program was:
#line 3300 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char __argz_stringify(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char __argz_stringify();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub___argz_stringify) || defined (__stub_____argz_stringify)
choke me
#else
f = __argz_stringify;
#endif

; return 0; }
configure:3295: checking for __argz_next
configure:3324: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccRnaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:3318: undefined reference to `__argz_next'
configure: failed program was:
#line 3300 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char __argz_next(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char __argz_next();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub___argz_next) || defined (__stub_____argz_next)
choke me
#else
f = __argz_next;
#endif

; return 0; }
configure:3353: checking for stpcpy
configure:3382: gcc -o conftest -g -O2  -g conftest.c  1>&5
C:\TEMP\ccpsaaaa.o: In function `main':
//D/usr/local/id-utils-3.2d/configure:3376: undefined reference to `stpcpy'
configure: failed program was:
#line 3358 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char stpcpy(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char stpcpy();
char (*f)();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_stpcpy) || defined (__stub___stpcpy)
choke me
#else
f = stpcpy;
#endif

; return 0; }
configure:3416: checking for LC_MESSAGES
configure:3428: gcc -o conftest -g -O2  -g conftest.c  1>&5
configure: In function `main':
configure:3425: `LC_MESSAGES' undeclared (first use in this function)
configure:3425: (Each undeclared identifier is reported only once
configure:3425: for each function it appears in.)
configure: failed program was:
#line 3421 "configure"
#include "confdefs.h"
#include <locale.h>
int main() {
return LC_MESSAGES
; return 0; }
configure:3449: checking whether NLS is requested
configure:3469: checking whether included gettext is requested
configure:3488: checking for libintl.h
configure:3498: gcc -E  conftest.c >/dev/null 2>conftest.out
configure:3494: libintl.h: No such file or directory
configure: failed program was:
#line 3493 "configure"
#include "confdefs.h"
#include <libintl.h>
configure:3835: checking whether catgets can be used
configure:4108: checking for msgfmt
configure:4142: checking for gmsgfmt
configure:4178: checking for xgettext
configure:4275: checking for catalogs to be installed
configure:4406: checking for emacs
configure:4406: checking for xemacs
