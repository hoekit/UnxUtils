<!-- manual page source format generated by PolyglotMan v3.0.7, -->
<!-- available via anonymous ftp from ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z -->

<HTML>
<HEAD>
<TITLE>ANSI2KNR(1) manual page</TITLE>
</HEAD>
<BODY bgcolor=white>
<A HREF="#toc">Table of Contents</A><P>
 
<H2><A NAME="sect0" HREF="#toc0">Name </A></H2>
ansi2knr - convert ANSI C to Kernighan &amp; Ritchie C  
<H2><A NAME="sect1" HREF="#toc1">Synopsis </A></H2>
<I>ansi2knr</I> 
input_file output_file  
<H2><A NAME="sect2" HREF="#toc2">Description </A></H2>
If no output_file is supplied, output 
goes to stdout.  <BR>
There are no error messages.  <P>
<I>ansi2knr</I> recognizes functions by seeing a 
non-keyword identifier at the left margin, followed by a left parenthesis, 
with a right parenthesis as the last character on the line.  It will recognize 
a multi-line header if the last character on each line but the last is 
a left parenthesis or comma.  These algorithms ignore whitespace and comments, 
except that the function name must be the first thing on the line.  <P>
The 
following constructs will confuse it:  <BR>
     - Any other construct that starts at the left margin and follows the 
above syntax (such as a macro or function call).  <BR>
     - Macros that tinker with the syntax of the function header. <P>

<HR><P>
<A NAME="toc"><B>Table of Contents</B></A><P>
<UL>
<LI><A NAME="toc0" HREF="#sect0">Name</A></LI>
<LI><A NAME="toc1" HREF="#sect1">Synopsis</A></LI>
<LI><A NAME="toc2" HREF="#sect2">Description</A></LI>
</UL>
</BODY></HTML>
