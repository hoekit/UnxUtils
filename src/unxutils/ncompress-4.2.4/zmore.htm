<!-- manual page source format generated by PolyglotMan v3.0.7, -->
<!-- available via anonymous ftp from ftp.cs.berkeley.edu:/ucb/people/phelps/tcltk/rman.tar.Z -->

<HTML>
<HEAD>
<TITLE>ZMORE(1) manual page</TITLE>
</HEAD>
<BODY bgcolor=white>
<A HREF="#toc">Table of Contents</A><P>
 
<H2><A NAME="sect0" HREF="#toc0">Name </A></H2>
zmore - file perusal filter for crt viewing of compressed text  
<H2><A NAME="sect1" HREF="#toc1">Synopsis 
</A></H2>
<B>zmore</B> [ name ...  ]  
<H2><A NAME="sect2" HREF="#toc2">Description </A></H2>
<I>Zmore</I> is a filter which allows examination 
of compressed text files one screenful at a time on a soft-copy terminal. 
It normally pauses after each screenful, printing --More-- at the bottom of 
the screen. If the user then types a carriage return, one more line is 
displayed. If the user hits a space, another screenful is displayed.  Other 
possibilites are enumerated later. <P>
<I>Zmore</I> looks in the file <I>/etc/termcap</I> 
to determine terminal characteristics, and to determine the default window 
size. On a terminal capable of displaying 24 lines, the default window 
size is 22 lines. <P>
Other sequences which may be typed when <I>zmore</I> pauses, 
and their effects, are as follows (<I>i </I> is an optional integer argument, 
defaulting to 1) : <P>

<DL>

<DT><I>i </I>&lt;space&gt; </DT>
<DD>display <I>i</I> more lines, (or another screenful 
if no argument is given) </DD>
</DL>
<P>

<DL>

<DT>^D </DT>
<DD>display 11 more lines (a ``scroll''). If <I>i</I> is given, 
then the scroll size is set to <I>i </I>. </DD>
</DL>
<P>

<DL>

<DT>d </DT>
<DD>same as ^D (control-D) </DD>
</DL>
<P>

<DL>

<DT><I>i </I>z </DT>
<DD>same as typing 
a space except that <I>i </I>, if present, becomes the new window size.  Note 
that the window size reverts back to the default at the end of the current 
file. </DD>
</DL>
<P>

<DL>

<DT><I>i </I>s </DT>
<DD>skip <I>i </I> lines and print a screenful of lines </DD>
</DL>
<P>

<DL>

<DT><I>i </I>f </DT>
<DD>skip <I>i </I> screenfuls 
and print a screenful of lines </DD>
</DL>
<P>

<DL>

<DT>q or Q </DT>
<DD>quit reading the current file; go 
on to the next (if any) </DD>
</DL>
<P>

<DL>

<DT>e </DT>
<DD>When the prompt --More--(Next file:  <I>file</I>) is printed, 
this command causes zmore to exit. </DD>
</DL>
<P>

<DL>

<DT>= </DT>
<DD>Display the current line number. </DD>
</DL>
<P>

<DL>

<DT><I>i 
</I>/expr </DT>
<DD>search for the <I>i </I>-th occurrence of the regular expression <I>expr. </I> If 
the pattern is not found, <I>zmore</I> goes on to the next file (if any). Otherwise, 
a screenful is displayed, starting two lines before the place where the 
expression was found. The user's erase and kill characters may be used to 
edit the regular expression. Erasing back past the first column cancels 
the search command. </DD>
</DL>
<P>

<DL>

<DT><I>i </I>n </DT>
<DD>search for the <I>i </I>-th occurrence of the last regular 
expression entered. </DD>
</DL>
<P>

<DL>

<DT>!command </DT>
<DD>invoke a shell with <I>command </I>.  The character 
`!' in "command" are replaced with the the previous shell command.  The sequence 
"\!" is replaced by "!". </DD>
</DL>
<P>

<DL>

<DT>:q or :Q </DT>
<DD>quit reading the current file; go on to 
the next (if any) (same as q or Q). </DD>
</DL>
<P>

<DL>

<DT>. </DT>
<DD>(dot) repeat the previous command. 
</DD>
</DL>
<P>
The commands take effect immediately, i.e., it is not necessary to type 
a carriage return. Up to the time when the command character itself is 
given, the user may hit the line kill character to cancel the numerical 
argument being formed. In addition, the user may hit the erase character 
to redisplay the --More-- message. <P>
At any time when output is being sent to 
the terminal, the user can hit the quit key (normally control-\). <I>Zmore</I> will 
stop sending output, and will display the usual --More-- prompt. The user may 
then enter one of the above commands in the normal manner. Unfortunately, 
some output is lost when this is done, due to the fact that any characters 
waiting in the terminal's output queue are flushed when the quit signal 
occurs. <P>
The terminal is set to <I>noecho</I> mode by this program so that the 
output can be continuous. What you type will thus not show on your terminal, 
except for the / and ! commands. <P>
If the standard output is not a teletype, 
then <I>zmore</I> acts just like <I>zcat,</I> except that a header is printed before 
each file.  
<H2><A NAME="sect3" HREF="#toc3">Files </A></H2>
 /etc/termcap<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;Terminal data base  
<H2><A NAME="sect4" HREF="#toc4">See Also </A></H2>
<A HREF="s">more(1)</A>
, <A HREF="s">zcat(1)</A>
, 
<A HREF="s">compress(1)</A>
, <A HREF="s">uncompress(1)</A>
 <P>

<HR><P>
<A NAME="toc"><B>Table of Contents</B></A><P>
<UL>
<LI><A NAME="toc0" HREF="#sect0">Name</A></LI>
<LI><A NAME="toc1" HREF="#sect1">Synopsis</A></LI>
<LI><A NAME="toc2" HREF="#sect2">Description</A></LI>
<LI><A NAME="toc3" HREF="#sect3">Files</A></LI>
<LI><A NAME="toc4" HREF="#sect4">See Also</A></LI>
</UL>
</BODY></HTML>
